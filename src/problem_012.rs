/*
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?
 */
pub fn solve_012() {
    let n: u64 = 500;
    println!(
        "The first triangle number with over {} divisors is {}",
        n, first_triangle_number_having_over_n_divisors(n)
    );
}

fn first_triangle_number_having_over_n_divisors(n: u64) -> u64 {
    let mut nth_triangle_number: u64 = 0;
    let mut result: u64 = 0;
    let mut nr_divisors: u64 = 0;

    while nr_divisors < n {
        nth_triangle_number += 1;
        result += nth_triangle_number;
        nr_divisors = calc_divisors(result);
    }
    result

}

fn calc_divisors(n: u64) -> u64 {
    let mut result: u64 = 2;  // 1 and n are always divisors
    let m: u64 = (n as f64).sqrt() as u64;
    for d in 2..m {
        if n % d == 0 {
            result += 2  // both d and n % d are divisors
        }
    }
    result
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn check_if_example_works() {
        assert_eq!(first_triangle_number_having_over_n_divisors(5), 28);
    }
}
